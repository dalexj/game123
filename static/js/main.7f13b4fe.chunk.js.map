{"version":3,"sources":["actions/router.js","actions/board.js","common/redux.js","components/MainMenu.js","components/Options.js","components/About.js","components/NewGame.js","components/LevelSelect.js","components/board/Layer.js","components/board/MouseLayer.js","components/board/GameBoard.js","components/board/Infobar.js","components/routes.js","components/Ingame.js","components/CustomRouter.js","lib/attacks.js","lib/Unit.js","reducers/boardReducer.js","reducers/index.js","reducers/routerReducer.js","App.js","index.js"],"names":["changeRoute","route","type","boardMouseClick","tileX","tileY","x","y","connectRedux","mapStateToProps","arguments","length","undefined","actions","connect","_","merge","_ref","files","props","react_default","a","createElement","className","Button","onClick","bsSize","bsStyle","NewGame","createClass","getInitialState","name","changeName","this","setState","render","_this","value","state","onChange","e","target","levels","range","map","n","key","Layer","index","children","width","height","style","zIndex","MouseTile","board","_ref2","tile","exists","_ref4","_ref3","tiles","i","TileBackground","fill","opacity","TileLayer","GameBoard_TileBackground","Unit","unit","rects","color","push","textLength","image","UnitLayer","units","GameBoard_Unit","MovementIndicators","_ref5","selectedUnit","otherUnitsTiles","flatMap","filter","center","head","found","find","every","otherUnitsTile","isEqual","href","EffectsLayer","_ref6","_ref7","GameBoard_MovementIndicators","concat","playerUnits","cpuUnits","_ref9","boardSelection","_ref8","GameBoard_TileLayer","GameBoard_UnitLayer","board_MouseLayer","Attack","attack","maxLength","moves","getAttacks","Infobar_Attack","routes","/","MainMenu","/options","Options","/about","About","/new-game","/level-select","LevelSelect","/ingame","board_Infobar","board_GameBoard","CurrentRoute","console","warn","attacks","attack1","description","attack2","baseInfo","player_unit1","cpu_unit1","Object","classCallCheck","attrs","atk","allAttacks","some","unitTile","amount","take","tile1","tile2","Math","abs","newTiles","reject","unshift","removeTiles","rows","cols","j","DEFAULT_STATE","reducers","action","clickedTile","clickedUnit","isOn","t","isAnyOtherUnitOn","canMoveTo","objectSpread","moveTo","store","createStore","combineReducers","App","es","components_CustomRouter","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7f13b4fe.chunk.js","sourcesContent":["export function changeRoute(route) {\n  return { type: 'CHANGE_ROUTE', route };\n}\n","export function boardMouseClick(tileX, tileY) {\n  return { type: 'BOARD_MOUSE_CLICK', x: tileX, y: tileY };\n}\n","import { connect } from 'react-redux';\nimport { changeRoute } from '../actions/router';\nimport { boardMouseClick } from '../actions/board';\nimport _ from 'lodash';\n\nexport function connectRedux(mapStateToProps = null, actions = {}) {\n  return connect(mapStateToProps, _.merge({}, actions, {changeRoute, boardMouseClick}));\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst MainMenu = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        The Game\n      </h1>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/new-game')} bsSize='lg' bsStyle='primary'>New Game</Button>\n      </div>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/options')} bsSize='lg' bsStyle='primary'>Options</Button>\n      </div>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/about')} bsSize='lg' bsStyle='primary'>About</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux(({files}) => ({files}))(MainMenu);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst Options = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        Options\n      </h1>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(Options);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst About = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        About\n      </h1>\n      <h4>\n        I made it\n      </h4>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(About);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport createClass from 'create-react-class';\n\nconst NewGame = createClass({\n  getInitialState() {\n    return {\n      name: '',\n    };\n  },\n\n  changeName(name) {\n    this.setState({name});\n  },\n\n  render() {\n    return (\n      <div className='text-center'>\n        <div className=\"row top\" />\n        <h1>\n          New Game\n        </h1>\n        <label>Name</label>\n        <input className=\"form-control\" value={this.state.name} onChange={e => this.changeName(e.target.value)} />\n        <div className=\"row\">\n          <Button onClick={() => this.props.changeRoute('/level-select')} bsSize='lg' bsStyle='primary'>Start Game</Button>\n        </div>\n        <div className=\"row\">\n          <Button onClick={() => this.props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Cancel</Button>\n        </div>\n      </div>\n    );\n  },\n});\n\nexport default connectRedux(({files}) => ({files}))(NewGame);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport _ from 'lodash';\n\nconst LevelSelect = (props) => {\n  const levels = _.range(1, 10);\n  return (\n    <div>\n      <div className=\"row top\" />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h1>Choose Level</h1>\n          {levels.map(n => <div key={n} className=\"row\"><Button onClick={() => props.changeRoute('/ingame')}>Level {n}</Button></div>)}\n        </div>\n        <div className=\"col-md-6\">\n          <Button>Shop</Button>\n          <Button>Units</Button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(LevelSelect);\n","import React from 'react';\n\nexport default ({index, children}) => {\n  return (\n    <svg width=\"690\" height=\"460\" style={{zIndex: index}}>\n      {children}\n    </svg>\n  );\n};\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nimport Layer from './Layer';\n\nconst MouseTile = connectRedux(({board}) => ({board}))(({tile, boardMouseClick, board}) => {\n    if(!tile.exists) {\n        return null;\n    }\n    return (\n        <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" className='mouse-tile' onClick={() => boardMouseClick(tile.x, tile.y)}/>\n    );\n});\n\nconst MouseLayer = ({board}) => {\n    return (\n        <Layer index={4}>\n            {board.tiles.map((tile, i) => <MouseTile key={i} tile={tile} />)}\n        </Layer>\n    );\n}\n\nexport default connectRedux(({board}) => ({board}))(MouseLayer);\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\nimport _ from 'lodash';\n\nimport MouseLayer from './MouseLayer';\nimport Layer from './Layer';\n\nconst TileBackground = ({tile}) => {\n    if(!tile.exists) {\n        return null;\n    }\n    return (\n        <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" style={{fill: 'white', opacity: 0.25}} />\n    );\n};\n\nconst TileLayer = ({tiles}) => {\n    return (\n        <Layer index={1}>\n            {tiles.map((tile, i) => <TileBackground key={i} tile={tile} />)}\n        </Layer>\n    );\n};\n\nconst Unit = ({unit}) => {\n    if(unit.tiles.length === 0) {\n        return null;\n    }\n    let rects = unit.tiles.map((tile, i) =>\n        <rect key={i} x={tile[0] * 46} y={tile[1] * 46} width=\"40\" height=\"40\" fill={unit.color} />\n    );\n    rects.push(<text key='pic' x={unit.tiles[0][0] * 46} y={unit.tiles[0][1] * 46 + 40} textLength=\"40\">{unit.image}</text>)\n    return rects;\n};\n\nconst UnitLayer = ({units}) => {\n    return (\n        <Layer index={2}>\n            {units.map((unit, i) => <Unit key={i} unit={unit} />)}\n        </Layer>\n    );\n};\n\nconst MovementIndicators = ({selectedUnit, tiles, units}) => {\n    if(!selectedUnit) {\n        return null;\n    }\n    let otherUnitsTiles = _.flatMap(units.filter(unit => unit !== selectedUnit), 'tiles');\n    let center = selectedUnit.head();\n\n    let indicators = [\n        [center[0], center[1] + 1],\n        [center[0], center[1] - 1],\n        [center[0] + 1, center[1]],\n        [center[0] - 1, center[1]],\n    ].filter(tile => {\n        let found = _.find(tiles, {x: tile[0], y: tile[1]});\n        return found && found.exists && _.every(otherUnitsTiles, otherUnitsTile => !_.isEqual(otherUnitsTile, tile));\n    });\n    return indicators.map((tile, index) => <image href='assets/movement.png' width='40' height='40' x={tile[0] * 46} y={tile[1] * 46} />);\n};\n\nconst EffectsLayer = connectRedux(({board}) => ({board}))(({board}) => {\n    return (\n        <Layer index={3}>\n            <MovementIndicators tiles={board.tiles} selectedUnit={board.selectedUnit} units={_.concat(board.playerUnits, board.cpuUnits)} />\n        </Layer>\n    );\n});\n\nconst GameBoard = ({board}) => {\n    return (\n        <div>\n            <TileLayer tiles={board.tiles} />\n            <UnitLayer units={_.concat(board.playerUnits, board.cpuUnits)} />\n            <EffectsLayer />\n            <MouseLayer />\n        </div>\n    );\n};\n\nexport default connectRedux(({board, boardSelection})=>({board, boardSelection}))(GameBoard);\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nconst Attack = ({attack}) => {\n    return (\n        <div className='attack'>\n            {attack.name}\n        </div>\n    );\n};\n\nconst Infobar = ({board}) => {\n    let unit = board.selectedUnit;\n    if(!unit) return null;\n    return (\n        <div>\n            <h3>{unit.name}</h3>\n            <div>Health: {unit.tiles.length}</div>\n            <div>Max Health: {unit.maxLength}</div>\n            <div>Move: {unit.moves}</div>\n            {unit.getAttacks().map((attack, index) => <Attack key={index} attack={attack} />)}\n        </div>\n    );\n};\n\nexport default connectRedux(({board})=>({board}))(Infobar);\n","import MainMenu from './MainMenu';\nimport Options from './Options';\nimport About from './About';\nimport NewGame from './NewGame';\nimport LevelSelect from './LevelSelect';\nimport Ingame from './Ingame';\n\nexport default {\n  '/': MainMenu,\n  '/options': Options,\n  '/about': About,\n  '/new-game': NewGame,\n  '/level-select': LevelSelect,\n  '/ingame': Ingame,\n};\n","import React from 'react';\nimport { connectRedux } from '../common/redux';\nimport GameBoard from './board/GameBoard';\nimport Infobar from './board/Infobar';\n\nconst Ingame = () => {\n    return (\n        <div>\n            <div className=\"row top\" />\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <ul className=\"list-group\">\n                        <Infobar />\n                    </ul>\n                </div>\n                <div className=\"col-md-9\">\n                    <GameBoard />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(Ingame);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport routes from './routes'\n\nconst CustomRouter = (props) => {\n  let CurrentRoute = routes[props.route];\n\n  if(CurrentRoute) {\n    return <CurrentRoute />;\n  } else {\n    console.warn(`Route did not match - '${props.route}'`);\n    return <span />;\n  }\n};\n\nexport default connect(({route}) => ({route}))(CustomRouter);\n","\nconst attacks = {\n    attack1: {\n        name: 'attack_one',\n        type: 'standard',\n        description: 'does an attack super goodly'\n    },\n    attack2: {\n        name: 'cpu_attack',\n        type: 'standard',\n        description: 'does an attack super goodly'\n    },\n};\n\nexport default attacks;\n","import _ from 'lodash';\nimport allAttacks from './attacks';\n\nconst baseInfo = {\n    player_unit1: {\n        image: 'r',\n        tiles: [],\n        color: 'orange',\n        name: 'the_unit',\n        maxLength: 5,\n        moves: 4,\n        attacks: ['attack1', 'attack2'],\n    },\n    cpu_unit1: {\n        image: 'Z',\n        tiles: [],\n        color: 'lightblue',\n        name: 'the_bad_guy',\n        maxLength: 6,\n        moves: 8,\n        attacks: ['attack2'],\n    },\n};\n\nfunction tileDistance(tile1, tile2) {\n  return Math.abs(tile1[0] - tile2[0]) + Math.abs(tile1[1] - tile2[1]);\n};\n\nclass Unit {\n    constructor(type, tiles) {\n        let attrs = baseInfo[type];\n        if(!attrs) {\n            console.warn('cannot find unit type ' + type);\n        }\n        _.merge(this, attrs, {tiles});\n    }\n\n    getAttacks() {\n        return this.attacks.map(atk => allAttacks[atk]);\n    }\n\n    head() {\n        return this.tiles[0];\n    }\n\n    isOn(tile) {\n        return _.some(this.tiles, unitTile => _.isEqual(unitTile, tile));\n    }\n\n    removeTiles(amount) {\n        if(amount <= 0) return;\n        this.tiles = _.take(this.tiles, this.tiles.length - amount);\n    }\n\n    canMoveTo(tile) {\n        return tileDistance(this.head(), tile) === 1;\n    }\n\n    moveTo(tile) {\n        let newTiles = _.reject(this.tiles, unitTile => _.isEqual(unitTile, tile));\n        newTiles.unshift(tile);\n        this.tiles = newTiles;\n        this.removeTiles(this.tiles.length - this.maxLength);\n    }\n}\n\nexport default Unit;\n","import _ from 'lodash';\nimport Unit from '../lib/Unit';\n\nconst rows = _.range(0, 15);\nconst cols = _.range(0, 10);\n\nlet tiles = _.flatMap(cols, i => rows.map(j => (\n    {\n        x: j,\n        y: i,\n        exists: true,\n    }\n)));\n\n_.find(tiles, tile => tile.x === 1 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 2 && tile.y === 5).exists = false;\n_.find(tiles, tile => tile.x === 4 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 6 && tile.y === 4).exists = false;\n\n\nconst DEFAULT_STATE = {\n    selectedUnit: null,\n    tiles: tiles,\n    playerUnits: [\n        new Unit('player_unit1', [[1,2], [2,2], [2,3], [2,4]]),\n    ],\n    cpuUnits: [\n        new Unit('cpu_unit1', [[6,2], [7,2], [7,3], [7,4]]),\n    ],\n};\nfunction isAnyOtherUnitOn({playerUnits, cpuUnits, selectedUnit}, tile) {\n    let tiles = _(playerUnits).concat(cpuUnits).reject(unit => unit === selectedUnit).flatMap('tiles').value();\n    return _.some(tiles, t => _.isEqual(t, tile));\n}\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n    if(action.type === 'BOARD_MOUSE_CLICK') {\n        let clickedTile = [action.x, action.y];\n        let clickedUnit = _.find(_.concat(state.playerUnits, state.cpuUnits), unit => unit.isOn(clickedTile));\n        if(state.selectedUnit && (!clickedUnit || clickedUnit === state.selectedUnit)) {\n            let boardTile = _.find(state.tiles, {x: action.x, y: action.y});\n            if(boardTile.exists && !isAnyOtherUnitOn(state, clickedTile) && state.selectedUnit.canMoveTo(clickedTile)) {\n                state.selectedUnit.moveTo(clickedTile);\n                return {...state};\n            }\n        }\n        return {...state, selectedUnit: clickedUnit};\n    }\n    return state;\n};\n","import { createStore, combineReducers } from 'redux';\nimport routerReducer from './routerReducer';\nimport boardReducer from './boardReducer';\n\nconst reducers = {\n  route: routerReducer,\n  board: boardReducer,\n};\n\nexport const store = createStore(combineReducers(reducers));\n","const DEFAULT_STATE = '/ingame';\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n  if(action.type === 'CHANGE_ROUTE') {\n    return action.route;\n  } else {\n    return state;\n  }\n};\n","import React from 'react';\nimport createClass from 'create-react-class';\nimport CustomRouter from './components/CustomRouter';\nimport { store } from './reducers';\nimport { Provider } from 'react-redux';\n\nconst App = createClass({\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <CustomRouter />\n        </div>\n      </Provider>\n    );\n  }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './custom.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
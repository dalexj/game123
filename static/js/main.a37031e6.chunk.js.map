{"version":3,"sources":["actions/router.js","actions/board.js","common/redux.js","components/MainMenu.js","components/Options.js","components/About.js","components/NewGame.js","components/LevelSelect.js","components/board/Layer.js","components/board/MouseLayer.js","components/board/GameBoard.js","components/board/Infobar.js","components/routes.js","components/Ingame.js","components/CustomRouter.js","lib/attacks.js","lib/Unit.js","reducers/boardReducer.js","reducers/index.js","reducers/routerReducer.js","App.js","index.js"],"names":["changeRoute","route","type","boardMouseClick","tileX","tileY","x","y","selectAttack","attack","undoMovement","connectRedux","mapStateToProps","arguments","length","undefined","actions","connect","_","merge","_ref","files","props","react_default","a","createElement","className","Button","onClick","bsSize","bsStyle","NewGame","createClass","getInitialState","name","changeName","this","setState","render","_this","value","state","onChange","e","target","levels","range","map","n","key","Layer","index","children","width","height","style","zIndex","MouseTile","board","_ref2","tile","exists","_ref4","_ref3","tiles","i","TileBackground","fill","opacity","TileLayer","GameBoard_TileBackground","Unit","unit","rects","color","push","textLength","image","UnitLayer","units","GameBoard_Unit","MovementIndicators","_ref5","selectedUnit","hasMovementLeft","otherUnitsTiles","flatMap","filter","center","head","found","find","every","otherUnitsTile","isEqual","href","EffectsLayer","_ref6","_ref7","GameBoard_MovementIndicators","concat","playerUnits","cpuUnits","_ref9","boardSelection","_ref8","GameBoard_TileLayer","GameBoard_UnitLayer","board_MouseLayer","Attack","selectedAttack","selectedClass","maxLength","movesTaken","moves","JSON","stringify","getAttacks","Infobar_Attack","routes","/","MainMenu","/options","Options","/about","About","/new-game","/level-select","LevelSelect","/ingame","board_Infobar","board_GameBoard","CurrentRoute","console","warn","attacks","attack1","description","damage","attack2","baseInfo","player_unit1","cpu_unit1","Object","classCallCheck","attrs","startTurn","atk","allAttacks","some","unitTile","amount","take","tile1","tile2","Math","abs","newTiles","reject","unshift","removeTiles","canMoveTo","otherUnit","finished","startingTiles","cloneDeep","rows","cols","j","DEFAULT_STATE","reducers","action","clickedTile","clickedUnit","isOn","t","isAnyOtherUnitOn","moveTo","objectSpread","canAttack","performAttack","resetMovement","store","createStore","combineReducers","App","es","components_CustomRouter","ReactDOM","src_App","document","getElementById"],"mappings":"8NAAO,SAASA,EAAYC,GACxB,MAAO,CAAEC,KAAM,eAAgBD,SCD5B,SAASE,EAAgBC,EAAOC,GACnC,MAAO,CAAEH,KAAM,oBAAqBI,EAAGF,EAAOG,EAAGF,GAG9C,SAASG,EAAaC,GACzB,MAAO,CAAEP,KAAM,gBAAiBO,UAG7B,SAASC,EAAaD,GACzB,MAAO,CAAEP,KAAM,qCCJZ,SAASS,IAAmD,IAAtCC,EAAsCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,KAAMG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC3D,OAAOI,YAAQL,EAAiBM,IAAEC,MAAM,GAAIH,EAAS,CACjDhB,cACAG,kBACAK,eACAE,kBCNR,IAoBeC,IAAa,SAAAS,GAAA,MAAc,CAACC,MAAfD,EAAEC,QAAfV,CApBE,SAACW,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,cAAc6B,OAAO,KAAKC,QAAQ,WAA3E,aAEJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,aAAa6B,OAAO,KAAKC,QAAQ,WAA1E,YAEJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,WAAW6B,OAAO,KAAKC,QAAQ,WAAxE,aCADnB,MAdC,SAACW,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,qBAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,MAAM6B,OAAO,KAAKC,QAAQ,WAAnE,YCSDnB,MAjBD,SAACW,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,mBAGAF,EAAAC,EAAAC,cAAA,uBAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,MAAM6B,OAAO,KAAKC,QAAQ,WAAnE,YCVVC,EAAUC,IAAY,CACxBC,gBADwB,WAEpB,MAAO,CACHC,KAAM,KAIdC,WAPwB,SAObD,GACPE,KAAKC,SAAS,CAACH,UAGnBI,OAXwB,WAWf,IAAAC,EAAAH,KACL,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAec,MAAOJ,KAAKK,MAAMP,KAAMQ,SAAU,SAAAC,GAAC,OAAIJ,EAAKJ,WAAWQ,EAAEC,OAAOJ,UAChGjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMW,EAAKjB,MAAMtB,YAAY,kBAAkB6B,OAAO,KAAKC,QAAQ,WAApF,eAEJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMW,EAAKjB,MAAMtB,YAAY,MAAM6B,OAAO,KAAKC,QAAQ,WAAxE,eAOLnB,IAAa,SAAAS,GAAA,MAAc,CAACC,MAAfD,EAAEC,QAAfV,CAAqCoB,GCXrCpB,MApBK,SAACW,GACjB,IAAMuB,EAAS3B,IAAE4B,MAAM,EAAG,IAC1B,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,0BACCoB,EAAOE,IAAI,SAAAC,GAAC,OAAIzB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKD,EAAGtB,UAAU,OAAMH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAMtB,YAAY,aAAzC,SAA4DgD,OAE9GzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,aACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,mBCfLuB,EAAA,SAAA9B,GAAuB,IAArB+B,EAAqB/B,EAArB+B,MAAOC,EAAchC,EAAdgC,SACpB,OACI7B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,MAAMC,OAAO,MAAMC,MAAO,CAACC,OAAQL,IACzCC,ICAPK,EAAY9C,EAAa,SAAAS,GAAA,MAAc,CAACsC,MAAftC,EAAEsC,QAAf/C,CAAqC,SAAAgD,GAAoC,IAAlCC,EAAkCD,EAAlCC,KAAMzD,EAA4BwD,EAA5BxD,gBAA4BwD,EAAXD,MAC5E,OAAIE,EAAKC,OAILtC,EAAAC,EAAAC,cAAA,QAAMnB,EAAY,GAATsD,EAAKtD,EAAQC,EAAY,GAATqD,EAAKrD,EAAQ8C,MAAM,KAAKC,OAAO,KAAK5B,UAAU,aAAaE,QAAS,kBAAMzB,EAAgByD,EAAKtD,EAAGsD,EAAKrD,MAHzH,OAeAI,IAAa,SAAAmD,GAAA,MAAc,CAACJ,MAAfI,EAAEJ,QAAf/C,CARI,SAAAoD,GAAa,IAAXL,EAAWK,EAAXL,MACjB,OACInC,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,MAAO,GACTO,EAAMM,MAAMjB,IAAI,SAACa,EAAMK,GAAP,OAAa1C,EAAAC,EAAAC,cAACgC,EAAD,CAAWR,IAAKgB,EAAGL,KAAMA,SCV7DM,EAAiB,SAAA9C,GAAY,IAAVwC,EAAUxC,EAAVwC,KACrB,OAAIA,EAAKC,OAILtC,EAAAC,EAAAC,cAAA,QAAMnB,EAAY,GAATsD,EAAKtD,EAAQC,EAAY,GAATqD,EAAKrD,EAAQ8C,MAAM,KAAKC,OAAO,KAAKC,MAAO,CAACY,KAAM,QAASC,QAAS,OAHtF,MAOTC,EAAY,SAAAV,GAAa,IAAXK,EAAWL,EAAXK,MAChB,OACIzC,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,MAAO,GACTa,EAAMjB,IAAI,SAACa,EAAMK,GAAP,OAAa1C,EAAAC,EAAAC,cAAC6C,EAAD,CAAgBrB,IAAKgB,EAAGL,KAAMA,QAK5DW,EAAO,SAAAR,GAAY,IAAVS,EAAUT,EAAVS,KACX,GAAyB,IAAtBA,EAAKR,MAAMlD,OACV,OAAO,KAEX,IAAI2D,EAAQD,EAAKR,MAAMjB,IAAI,SAACa,EAAMK,GAAP,OACvB1C,EAAAC,EAAAC,cAAA,QAAMwB,IAAKgB,EAAG3D,EAAa,GAAVsD,EAAK,GAASrD,EAAa,GAAVqD,EAAK,GAASP,MAAM,KAAKC,OAAO,KAAKa,KAAMK,EAAKE,UAGtF,OADAD,EAAME,KAAKpD,EAAAC,EAAAC,cAAA,QAAMwB,IAAI,MAAM3C,EAAsB,GAAnBkE,EAAKR,MAAM,GAAG,GAASzD,EAAsB,GAAnBiE,EAAKR,MAAM,GAAG,GAAU,GAAIY,WAAW,MAAMJ,EAAKK,QACnGJ,GAGLK,EAAY,SAAAhB,GAAa,IAAXiB,EAAWjB,EAAXiB,MAChB,OACIxD,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,MAAO,GACT4B,EAAMhC,IAAI,SAACyB,EAAMP,GAAP,OAAa1C,EAAAC,EAAAC,cAACuD,EAAD,CAAM/B,IAAKgB,EAAGO,KAAMA,QAKlDS,EAAqB,SAAAC,GAAkC,IAAhCC,EAAgCD,EAAhCC,aAAcnB,EAAkBkB,EAAlBlB,MAAOe,EAAWG,EAAXH,MAC9C,IAAII,IAAiBA,EAAaC,kBAC9B,OAAO,KAEX,IAAIC,EAAkBnE,IAAEoE,QAAQP,EAAMQ,OAAO,SAAAf,GAAI,OAAIA,IAASW,IAAe,SACzEK,EAASL,EAAaM,OAW1B,MATiB,CACb,CAACD,EAAO,GAAIA,EAAO,GAAK,GACxB,CAACA,EAAO,GAAIA,EAAO,GAAK,GACxB,CAACA,EAAO,GAAK,EAAGA,EAAO,IACvB,CAACA,EAAO,GAAK,EAAGA,EAAO,KACzBD,OAAO,SAAA3B,GACL,IAAI8B,EAAQxE,IAAEyE,KAAK3B,EAAO,CAAC1D,EAAGsD,EAAK,GAAIrD,EAAGqD,EAAK,KAC/C,OAAO8B,GAASA,EAAM7B,QAAU3C,IAAE0E,MAAMP,EAAiB,SAAAQ,GAAc,OAAK3E,IAAE4E,QAAQD,EAAgBjC,OAExFb,IAAI,SAACa,EAAMT,GAAP,OAAiB5B,EAAAC,EAAAC,cAAA,SAAOwB,IAAKE,EAAO4C,KAAK,sBAAsB1C,MAAM,KAAKC,OAAO,KAAKhD,EAAa,GAAVsD,EAAK,GAASrD,EAAa,GAAVqD,EAAK,QAGnIoC,EAAerF,EAAa,SAAAsF,GAAA,MAAc,CAACvC,MAAfuC,EAAEvC,QAAf/C,CAAqC,SAAAuF,GAAa,IAAXxC,EAAWwC,EAAXxC,MACxD,OACInC,EAAAC,EAAAC,cAACyB,EAAD,CAAOC,MAAO,GACV5B,EAAAC,EAAAC,cAAC0E,EAAD,CAAoBnC,MAAON,EAAMM,MAAOmB,aAAczB,EAAMyB,aAAcJ,MAAO7D,IAAEkF,OAAO1C,EAAM2C,YAAa3C,EAAM4C,eAgBhH3F,IAAa,SAAA4F,GAAA,MAA4B,CAAC7C,MAA7B6C,EAAE7C,MAAkC8C,eAApCD,EAASC,iBAAtB7F,CAXG,SAAA8F,GAAa,IAAX/C,EAAW+C,EAAX/C,MAChB,OACInC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiF,EAAD,CAAW1C,MAAON,EAAMM,QACxBzC,EAAAC,EAAAC,cAACkF,EAAD,CAAW5B,MAAO7D,IAAEkF,OAAO1C,EAAM2C,YAAa3C,EAAM4C,YACpD/E,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACmF,EAAD,SCzENC,EAAS,SAAAzF,GAA4C,IAA1CX,EAA0CW,EAA1CX,OAAQD,EAAkCY,EAAlCZ,aAAcsG,EAAoB1F,EAApB0F,eAC/BC,EAAgB,GAIpB,OAHGD,GAAkBA,EAAe5E,OAASzB,EAAOyB,OAChD6E,EAAgB,mBAGhBxF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UAAYqF,EAAenF,QAAS,kBAAMpB,EAAaC,KAClEA,EAAOyB,OAuBLvB,IAAa,SAAAoD,GAAA,MAAY,CAACL,MAAbK,EAAEL,QAAf/C,CAlBC,SAAAgD,GAAyC,IAAvCD,EAAuCC,EAAvCD,MAAOlD,EAAgCmD,EAAhCnD,aAAcE,EAAkBiD,EAAlBjD,aAC/B8D,EAAOd,EAAMyB,aACjB,OAAIX,EAEAjD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAK+C,EAAKtC,MACVX,EAAAC,EAAAC,cAAA,sBAAc+C,EAAKR,MAAMlD,QACzBS,EAAAC,EAAAC,cAAA,0BAAkB+C,EAAKwC,WACvBzF,EAAAC,EAAAC,cAAA,oBAAY+C,EAAKyC,WAAjB,IAA8BzC,EAAK0C,OACnC3F,EAAAC,EAAAC,cAAA,sBAAc0F,KAAKC,aAClB5C,EAAK6C,aAAatE,IAAI,SAACtC,EAAQ0C,GAAT,OACnB5B,EAAAC,EAAAC,cAAC6F,EAAD,CAAQR,eAAgBpD,EAAMoD,eAAiB7D,IAAKE,EAAO1C,OAAQA,EAAQD,aAAcA,MAE7Fe,EAAAC,EAAAC,cAAA,OAAKG,QAAS,kBAAMlB,MAApB,SAXS,OCVN6G,EAAA,CACXC,IAAKC,EACLC,WAAYC,EACZC,SAAUC,EACVC,YAAa/F,EACbgG,gBAAiBC,EACjBC,UCUWtH,IAlBA,WACX,OACIY,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAACyG,EAAD,QAGR3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0G,EAAD,YCDLlH,cAAQ,SAAAG,GAAA,MAAc,CAACnB,MAAfmB,EAAEnB,QAAVgB,CAXM,SAACK,GAClB,IAAI8G,EAAeb,EAAOjG,EAAMrB,OAEhC,OAAGmI,EACQ7G,EAAAC,EAAAC,cAAC2G,EAAD,OAEPC,QAAQC,KAAR,0BAAAlC,OAAuC9E,EAAMrB,MAA7C,MACOsB,EAAAC,EAAAC,cAAA,8CCKA8G,EAfC,CACZC,QAAS,CACLtG,KAAM,aACNhC,KAAM,WACNuI,YAAa,8BACbC,OAAQ,GAEZC,QAAS,CACLzG,KAAM,aACNhC,KAAM,WACNuI,YAAa,8BACbC,OAAQ,ICTVE,EAAW,CACbC,aAAc,CACVhE,MAAO,IACPb,MAAO,GACPU,MAAO,SACPxC,KAAM,WACN8E,UAAW,EACXE,MAAO,EACPqB,QAAS,CAAC,UAAW,YAEzBO,UAAW,CACPjE,MAAO,IACPb,MAAO,GACPU,MAAO,YACPxC,KAAM,cACN8E,UAAW,EACXE,MAAO,EACPqB,QAAS,CAAC,iBA2EHhE,aAlEX,SAAAA,EAAYrE,EAAM8D,GAAQ+E,OAAAC,EAAA,EAAAD,CAAA3G,KAAAmC,GACtB,IAAI0E,EAAQL,EAAS1I,GACjB+I,GACAZ,QAAQC,KAAK,yBAA2BpI,GAE5CgB,IAAEC,MAAMiB,KAAM6G,GACd7G,KAAK4B,MAAQA,EACb5B,KAAK8G,qEAIL,OAAO9G,KAAKmG,QAAQxF,IAAI,SAAAoG,GAAG,OAAIC,EAAWD,oCAI1C,OAAO/G,KAAK4B,MAAM,gCAGjBJ,GACD,OAAO1C,IAAEmI,KAAKjH,KAAK4B,MAAO,SAAAsF,GAAQ,OAAIpI,IAAE4E,QAAQwD,EAAU1F,yCAGlD2F,GACLA,GAAU,IACbnH,KAAK4B,MAAQ9C,IAAEsI,KAAKpH,KAAK4B,MAAO5B,KAAK4B,MAAMlD,OAASyI,sCAG9C3F,GACN,OAA2C,KAjC7B6F,EAiCMrH,KAAKqD,OAjCJiE,EAiCY9F,EAhC9B+F,KAAKC,IAAIH,EAAM,GAAKC,EAAM,IAAMC,KAAKC,IAAIH,EAAM,GAAKC,EAAM,KADrE,IAAsBD,EAAOC,iCAoClB9F,GACH,IAAIiG,EAAW3I,IAAE4I,OAAO1H,KAAK4B,MAAO,SAAAsF,GAAQ,OAAIpI,IAAE4E,QAAQwD,EAAU1F,KACpEiG,EAASE,QAAQnG,GACjBxB,KAAK4B,MAAQ6F,EACbzH,KAAK4H,YAAY5H,KAAK4B,MAAMlD,OAASsB,KAAK4E,6CAGpCpD,EAAMnD,GAEZ,OAAO2B,KAAK6H,UAAUrG,yCAGZnD,EAAQyJ,GACC,aAAhBzJ,EAAOP,MACNgK,EAAUF,YAAYvJ,EAAOiI,kDAKjC,OAAOtG,KAAK6E,WAAa7E,KAAK8E,0CAI9B9E,KAAK6E,WAAa,EAClB7E,KAAK+H,UAAW,EAChB/H,KAAKgI,cAAgBlJ,IAAEmJ,UAAUjI,KAAK4B,+CAItC5B,KAAK6E,WAAa,EAClB7E,KAAK4B,MAAQ9C,IAAEmJ,UAAUjI,KAAKgI,wBCvFhCE,EAAOpJ,IAAE4B,MAAM,EAAG,IAClByH,EAAOrJ,IAAE4B,MAAM,EAAG,IAEpBkB,EAAQ9C,IAAEoE,QAAQiF,EAAM,SAAAtG,GAAC,OAAIqG,EAAKvH,IAAI,SAAAyH,GAAC,MACvC,CACIlK,EAAGkK,EACHjK,EAAG0D,EACHJ,QAAQ,OAIhB3C,IAAEyE,KAAK3B,EAAO,SAAAJ,GAAI,OAAe,IAAXA,EAAKtD,GAAsB,IAAXsD,EAAKrD,IAASsD,QAAS,EAC7D3C,IAAEyE,KAAK3B,EAAO,SAAAJ,GAAI,OAAe,IAAXA,EAAKtD,GAAsB,IAAXsD,EAAKrD,IAASsD,QAAS,EAC7D3C,IAAEyE,KAAK3B,EAAO,SAAAJ,GAAI,OAAe,IAAXA,EAAKtD,GAAsB,IAAXsD,EAAKrD,IAASsD,QAAS,EAC7D3C,IAAEyE,KAAK3B,EAAO,SAAAJ,GAAI,OAAe,IAAXA,EAAKtD,GAAsB,IAAXsD,EAAKrD,IAASsD,QAAS,EAG7D,IAAM4G,EAAgB,CAClBtF,aAAc,KACd2B,eAAgB,KAChB9C,MAAOA,EACPqC,YAAa,CACT,IAAI9B,EAAK,eAAgB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,MAEtD+B,SAAU,CACN,IAAI/B,EAAK,YAAa,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,OAQxC,IChCTmG,EAAW,CACbzK,MCHW,WAAwC,IAAvCwC,EAAuC5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFjC,UAEiB8J,EAAgB9J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC5C,MAAmB,iBAAhB8J,EAAOzK,KACCyK,EAAO1K,MAEPwC,GDAXiB,MD8BW,WAAwC,IAAvCjB,EAAuC5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B4J,EAAeE,EAAgB9J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC5C,GAAmB,sBAAhB8J,EAAOzK,KAA8B,CACpC,IAAI0K,EAAc,CAACD,EAAOrK,EAAGqK,EAAOpK,GAChCsK,EAAc3J,IAAEyE,KAAKzE,IAAEkF,OAAO3D,EAAM4D,YAAa5D,EAAM6D,UAAW,SAAA9B,GAAI,OAAIA,EAAKsG,KAAKF,KACxF,IAAGnI,EAAMqE,eAML,OAAGrE,EAAM0C,cAAgB1C,EAAM0C,aAAaC,qBAAuByF,GAAeA,IAAgBpI,EAAM0C,eACpFjE,IAAEyE,KAAKlD,EAAMuB,MAAO,CAAC1D,EAAGqK,EAAOrK,EAAGC,EAAGoK,EAAOpK,IAC/CsD,SAjB7B,SAAAzC,EAAiEwC,GAAM,IAA5CyC,EAA4CjF,EAA5CiF,YAAaC,EAA+BlF,EAA/BkF,SAAUnB,EAAqB/D,EAArB+D,aAC1CnB,EAAQ9C,IAAEmF,GAAaD,OAAOE,GAAUwD,OAAO,SAAAtF,GAAI,OAAIA,IAASW,IAAcG,QAAQ,SAAS9C,QACnG,OAAOtB,IAAEmI,KAAKrF,EAAO,SAAA+G,GAAC,OAAI7J,IAAE4E,QAAQiF,EAAGnH,KAeHoH,CAAiBvI,EAAOmI,IAAgBnI,EAAM0C,aAAa8E,UAAUW,IACzFnI,EAAM0C,aAAa8F,OAAOL,GACnB7B,OAAAmC,EAAA,EAAAnC,CAAA,GAAItG,IAGZsG,OAAAmC,EAAA,EAAAnC,CAAA,GAAItG,EAAX,CAAkB0C,aAAc0F,IAZhC,GAAGpI,EAAM0C,aAAagG,UAAUP,EAAanI,EAAMqE,gBAE/C,OADArE,EAAM0C,aAAaiG,cAAc3I,EAAMqE,eAAgB+D,GAChD9B,OAAAmC,EAAA,EAAAnC,CAAA,GAAItG,OAahB,IAAmB,kBAAhBkI,EAAOzK,KACb,OAAO6I,OAAAmC,EAAA,EAAAnC,CAAA,GAAItG,EAAX,CAAkBqE,eAAgB6D,EAAOlK,SACtC,GAAmB,kBAAhBkK,EAAOzK,KAIb,OAHGuC,EAAM0C,cACL1C,EAAM0C,aAAakG,gBAEhBtC,OAAAmC,EAAA,EAAAnC,CAAA,GAAItG,GAEf,OAAOA,ICvDE6I,EAAQC,YAAYC,YAAgBd,IESlCe,EAZHzJ,IAAY,CACpBM,OADoB,WAEhB,OACIf,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAUJ,MAAOA,GACb/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACkK,EAAD,uBCLpBC,IAAStJ,OAAOf,EAAAC,EAAAC,cAACoK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a37031e6.chunk.js","sourcesContent":["export function changeRoute(route) {\n    return { type: 'CHANGE_ROUTE', route };\n}\n","export function boardMouseClick(tileX, tileY) {\n    return { type: 'BOARD_MOUSE_CLICK', x: tileX, y: tileY };\n}\n\nexport function selectAttack(attack) {\n    return { type: 'SELECT_ATTACK', attack };\n}\n\nexport function undoMovement(attack) {\n    return { type: 'UNDO_MOVEMENT' };\n}\n","import { connect } from 'react-redux';\nimport { changeRoute } from '../actions/router';\nimport { boardMouseClick, selectAttack, undoMovement } from '../actions/board';\nimport _ from 'lodash';\n\nexport function connectRedux(mapStateToProps = null, actions = {}) {\n    return connect(mapStateToProps, _.merge({}, actions, {\n        changeRoute,\n        boardMouseClick,\n        selectAttack,\n        undoMovement,\n    }));\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst MainMenu = (props) => {\n    return (\n        <div className='text-center'>\n            <div className=\"row top\" />\n            <h1>\n        The Game\n            </h1>\n            <div className=\"row\">\n                <Button onClick={() => props.changeRoute('/new-game')} bsSize='lg' bsStyle='primary'>New Game</Button>\n            </div>\n            <div className=\"row\">\n                <Button onClick={() => props.changeRoute('/options')} bsSize='lg' bsStyle='primary'>Options</Button>\n            </div>\n            <div className=\"row\">\n                <Button onClick={() => props.changeRoute('/about')} bsSize='lg' bsStyle='primary'>About</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux(({files}) => ({files}))(MainMenu);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst Options = (props) => {\n    return (\n        <div className='text-center'>\n            <div className=\"row top\" />\n            <h1>\n        Options\n            </h1>\n            <div className=\"row\">\n                <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(Options);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst About = (props) => {\n    return (\n        <div className='text-center'>\n            <div className=\"row top\" />\n            <h1>\n        About\n            </h1>\n            <h4>\n        I made it\n            </h4>\n            <div className=\"row\">\n                <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(About);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport createClass from 'create-react-class';\n\nconst NewGame = createClass({\n    getInitialState() {\n        return {\n            name: '',\n        };\n    },\n\n    changeName(name) {\n        this.setState({name});\n    },\n\n    render() {\n        return (\n            <div className='text-center'>\n                <div className=\"row top\" />\n                <h1>\n          New Game\n                </h1>\n                <label>Name</label>\n                <input className=\"form-control\" value={this.state.name} onChange={e => this.changeName(e.target.value)} />\n                <div className=\"row\">\n                    <Button onClick={() => this.props.changeRoute('/level-select')} bsSize='lg' bsStyle='primary'>Start Game</Button>\n                </div>\n                <div className=\"row\">\n                    <Button onClick={() => this.props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Cancel</Button>\n                </div>\n            </div>\n        );\n    },\n});\n\nexport default connectRedux(({files}) => ({files}))(NewGame);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport _ from 'lodash';\n\nconst LevelSelect = (props) => {\n    const levels = _.range(1, 10);\n    return (\n        <div>\n            <div className=\"row top\" />\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h1>Choose Level</h1>\n                    {levels.map(n => <div key={n} className=\"row\"><Button onClick={() => props.changeRoute('/ingame')}>Level {n}</Button></div>)}\n                </div>\n                <div className=\"col-md-6\">\n                    <Button>Shop</Button>\n                    <Button>Units</Button>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(LevelSelect);\n","import React from 'react';\n\nexport default ({index, children}) => {\n    return (\n        <svg width=\"690\" height=\"460\" style={{zIndex: index}}>\n            {children}\n        </svg>\n    );\n};\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nimport Layer from './Layer';\n\nconst MouseTile = connectRedux(({board}) => ({board}))(({tile, boardMouseClick, board}) => {\n    if(!tile.exists) {\n        return null;\n    }\n    return (\n        <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" className='mouse-tile' onClick={() => boardMouseClick(tile.x, tile.y)}/>\n    );\n});\n\nconst MouseLayer = ({board}) => {\n    return (\n        <Layer index={4}>\n            {board.tiles.map((tile, i) => <MouseTile key={i} tile={tile} />)}\n        </Layer>\n    );\n}\n\nexport default connectRedux(({board}) => ({board}))(MouseLayer);\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\nimport _ from 'lodash';\n\nimport MouseLayer from './MouseLayer';\nimport Layer from './Layer';\n\nconst TileBackground = ({tile}) => {\n    if(!tile.exists) {\n        return null;\n    }\n    return (\n        <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" style={{fill: 'white', opacity: 0.25}} />\n    );\n};\n\nconst TileLayer = ({tiles}) => {\n    return (\n        <Layer index={1}>\n            {tiles.map((tile, i) => <TileBackground key={i} tile={tile} />)}\n        </Layer>\n    );\n};\n\nconst Unit = ({unit}) => {\n    if(unit.tiles.length === 0) {\n        return null;\n    }\n    let rects = unit.tiles.map((tile, i) =>\n        <rect key={i} x={tile[0] * 46} y={tile[1] * 46} width=\"40\" height=\"40\" fill={unit.color} />\n    );\n    rects.push(<text key='pic' x={unit.tiles[0][0] * 46} y={unit.tiles[0][1] * 46 + 40} textLength=\"40\">{unit.image}</text>)\n    return rects;\n};\n\nconst UnitLayer = ({units}) => {\n    return (\n        <Layer index={2}>\n            {units.map((unit, i) => <Unit key={i} unit={unit} />)}\n        </Layer>\n    );\n};\n\nconst MovementIndicators = ({selectedUnit, tiles, units}) => {\n    if(!selectedUnit || !selectedUnit.hasMovementLeft()) {\n        return null;\n    }\n    let otherUnitsTiles = _.flatMap(units.filter(unit => unit !== selectedUnit), 'tiles');\n    let center = selectedUnit.head();\n\n    let indicators = [\n        [center[0], center[1] + 1],\n        [center[0], center[1] - 1],\n        [center[0] + 1, center[1]],\n        [center[0] - 1, center[1]],\n    ].filter(tile => {\n        let found = _.find(tiles, {x: tile[0], y: tile[1]});\n        return found && found.exists && _.every(otherUnitsTiles, otherUnitsTile => !_.isEqual(otherUnitsTile, tile));\n    });\n    return indicators.map((tile, index) => <image key={index} href='assets/movement.png' width='40' height='40' x={tile[0] * 46} y={tile[1] * 46} />);\n};\n\nconst EffectsLayer = connectRedux(({board}) => ({board}))(({board}) => {\n    return (\n        <Layer index={3}>\n            <MovementIndicators tiles={board.tiles} selectedUnit={board.selectedUnit} units={_.concat(board.playerUnits, board.cpuUnits)} />\n        </Layer>\n    );\n});\n\nconst GameBoard = ({board}) => {\n    return (\n        <div>\n            <TileLayer tiles={board.tiles} />\n            <UnitLayer units={_.concat(board.playerUnits, board.cpuUnits)} />\n            <EffectsLayer />\n            <MouseLayer />\n        </div>\n    );\n};\n\nexport default connectRedux(({board, boardSelection})=>({board, boardSelection}))(GameBoard);\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nconst Attack = ({attack, selectAttack, selectedAttack}) => {\n    let selectedClass = '';\n    if(selectedAttack && selectedAttack.name === attack.name) {\n        selectedClass = 'selected-attack';\n    }\n    return (\n        <div className={'attack ' + selectedClass} onClick={() => selectAttack(attack)}>\n            {attack.name}\n        </div>\n    );\n};\n\nconst Infobar = ({board, selectAttack, undoMovement}) => {\n    let unit = board.selectedUnit;\n    if(!unit) return null;\n    return (\n        <div>\n            <h3>{unit.name}</h3>\n            <div>Health: {unit.tiles.length}</div>\n            <div>Max Health: {unit.maxLength}</div>\n            <div>Move: {unit.movesTaken}/{unit.moves}</div>\n            <div>attack: {JSON.stringify()}</div>\n            {unit.getAttacks().map((attack, index) =>\n                <Attack selectedAttack={board.selectedAttack}  key={index} attack={attack} selectAttack={selectAttack} />\n            )}\n            <div onClick={() => undoMovement()}>Undo</div>\n        </div>\n    );\n};\n\nexport default connectRedux(({board})=>({board}))(Infobar);\n","import MainMenu from './MainMenu';\nimport Options from './Options';\nimport About from './About';\nimport NewGame from './NewGame';\nimport LevelSelect from './LevelSelect';\nimport Ingame from './Ingame';\n\nexport default {\n    '/': MainMenu,\n    '/options': Options,\n    '/about': About,\n    '/new-game': NewGame,\n    '/level-select': LevelSelect,\n    '/ingame': Ingame,\n};\n","import React from 'react';\nimport { connectRedux } from '../common/redux';\nimport GameBoard from './board/GameBoard';\nimport Infobar from './board/Infobar';\n\nconst Ingame = () => {\n    return (\n        <div>\n            <div className=\"row top\" />\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <ul className=\"list-group\">\n                        <Infobar />\n                    </ul>\n                </div>\n                <div className=\"col-md-9\">\n                    <GameBoard />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(Ingame);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport routes from './routes'\n\nconst CustomRouter = (props) => {\n    let CurrentRoute = routes[props.route];\n\n    if(CurrentRoute) {\n        return <CurrentRoute />;\n    } else {\n        console.warn(`Route did not match - '${props.route}'`);\n        return <span />;\n    }\n};\n\nexport default connect(({route}) => ({route}))(CustomRouter);\n","\nconst attacks = {\n    attack1: {\n        name: 'attack_one',\n        type: 'standard',\n        description: 'does an attack super goodly',\n        damage: 2,\n    },\n    attack2: {\n        name: 'cpu_attack',\n        type: 'standard',\n        description: 'does an attack super goodly',\n        damage: 1,\n    },\n};\n\nexport default attacks;\n","import _ from 'lodash';\nimport allAttacks from './attacks';\n\nconst baseInfo = {\n    player_unit1: {\n        image: 'r',\n        tiles: [],\n        color: 'orange',\n        name: 'the_unit',\n        maxLength: 5,\n        moves: 4,\n        attacks: ['attack1', 'attack2'],\n    },\n    cpu_unit1: {\n        image: 'Z',\n        tiles: [],\n        color: 'lightblue',\n        name: 'the_bad_guy',\n        maxLength: 6,\n        moves: 8,\n        attacks: ['attack2'],\n    },\n};\n\nfunction tileDistance(tile1, tile2) {\n    return Math.abs(tile1[0] - tile2[0]) + Math.abs(tile1[1] - tile2[1]);\n};\n\nclass Unit {\n    constructor(type, tiles) {\n        let attrs = baseInfo[type];\n        if(!attrs) {\n            console.warn('cannot find unit type ' + type);\n        }\n        _.merge(this, attrs);\n        this.tiles = tiles;\n        this.startTurn();\n    }\n\n    getAttacks() {\n        return this.attacks.map(atk => allAttacks[atk]);\n    }\n\n    head() {\n        return this.tiles[0];\n    }\n\n    isOn(tile) {\n        return _.some(this.tiles, unitTile => _.isEqual(unitTile, tile));\n    }\n\n    removeTiles(amount) {\n        if(amount <= 0) return;\n        this.tiles = _.take(this.tiles, this.tiles.length - amount);\n    }\n\n    canMoveTo(tile) {\n        return tileDistance(this.head(), tile) === 1;\n    }\n\n    moveTo(tile) {\n        let newTiles = _.reject(this.tiles, unitTile => _.isEqual(unitTile, tile));\n        newTiles.unshift(tile);\n        this.tiles = newTiles;\n        this.removeTiles(this.tiles.length - this.maxLength);\n    }\n\n    canAttack(tile, attack) {\n        // todo\n        return this.canMoveTo(tile);\n    }\n\n    performAttack(attack, otherUnit) {\n        if(attack.type === 'standard') {\n            otherUnit.removeTiles(attack.damage);\n        }\n    }\n\n    hasMovementLeft() {\n        return this.movesTaken < this.moves;\n    }\n\n    startTurn() {\n        this.movesTaken = 0;\n        this.finished = false;\n        this.startingTiles = _.cloneDeep(this.tiles);\n    }\n\n    resetMovement() {\n        this.movesTaken = 0;\n        this.tiles = _.cloneDeep(this.startingTiles);\n    }\n\n}\n\nexport default Unit;\n","import _ from 'lodash';\nimport Unit from '../lib/Unit';\n\nconst rows = _.range(0, 15);\nconst cols = _.range(0, 10);\n\nlet tiles = _.flatMap(cols, i => rows.map(j => (\n    {\n        x: j,\n        y: i,\n        exists: true,\n    }\n)));\n\n_.find(tiles, tile => tile.x === 1 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 2 && tile.y === 5).exists = false;\n_.find(tiles, tile => tile.x === 4 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 6 && tile.y === 4).exists = false;\n\n\nconst DEFAULT_STATE = {\n    selectedUnit: null,\n    selectedAttack: null,\n    tiles: tiles,\n    playerUnits: [\n        new Unit('player_unit1', [[1,2], [2,2], [2,3], [2,4]]),\n    ],\n    cpuUnits: [\n        new Unit('cpu_unit1', [[6,2], [7,2], [7,3], [7,4]]),\n    ],\n};\nfunction isAnyOtherUnitOn({playerUnits, cpuUnits, selectedUnit}, tile) {\n    let tiles = _(playerUnits).concat(cpuUnits).reject(unit => unit === selectedUnit).flatMap('tiles').value();\n    return _.some(tiles, t => _.isEqual(t, tile));\n}\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n    if(action.type === 'BOARD_MOUSE_CLICK') {\n        let clickedTile = [action.x, action.y];\n        let clickedUnit = _.find(_.concat(state.playerUnits, state.cpuUnits), unit => unit.isOn(clickedTile));\n        if(state.selectedAttack) { // attack mode\n            if(state.selectedUnit.canAttack(clickedTile, state.selectedAttack)) {\n                state.selectedUnit.performAttack(state.selectedAttack, clickedUnit);\n                return {...state};\n            }\n        } else { // movement mode\n            if(state.selectedUnit && state.selectedUnit.hasMovementLeft() && (!clickedUnit || clickedUnit === state.selectedUnit)) {\n                let boardTile = _.find(state.tiles, {x: action.x, y: action.y});\n                if(boardTile.exists && !isAnyOtherUnitOn(state, clickedTile) && state.selectedUnit.canMoveTo(clickedTile)) {\n                    state.selectedUnit.moveTo(clickedTile);\n                    return {...state};\n                }\n            }\n            return {...state, selectedUnit: clickedUnit};\n        }\n\n    } else if(action.type === 'SELECT_ATTACK') {\n        return {...state, selectedAttack: action.attack};\n    } else if(action.type === 'UNDO_MOVEMENT') {\n        if(state.selectedUnit) {\n            state.selectedUnit.resetMovement()\n        }\n        return {...state};\n    }\n    return state;\n};\n","import { createStore, combineReducers } from 'redux';\nimport routerReducer from './routerReducer';\nimport boardReducer from './boardReducer';\n\nconst reducers = {\n    route: routerReducer,\n    board: boardReducer,\n};\n\nexport const store = createStore(combineReducers(reducers));\n","const DEFAULT_STATE = '/ingame';\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n    if(action.type === 'CHANGE_ROUTE') {\n        return action.route;\n    } else {\n        return state;\n    }\n};\n","import React from 'react';\nimport createClass from 'create-react-class';\nimport CustomRouter from './components/CustomRouter';\nimport { store } from './reducers';\nimport { Provider } from 'react-redux';\n\nconst App = createClass({\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"container\">\n                    <CustomRouter />\n                </div>\n            </Provider>\n        );\n    }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './custom.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
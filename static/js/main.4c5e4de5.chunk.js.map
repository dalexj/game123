{"version":3,"sources":["actions/router.js","actions/board.js","common/redux.js","components/MainMenu.js","components/Options.js","components/About.js","components/NewGame.js","components/LevelSelect.js","components/board/Layer.js","components/board/MouseLayer.js","components/board/GameBoard.js","components/board/Infobar.js","components/routes.js","components/Ingame.js","components/CustomRouter.js","lib/attacks.js","lib/Unit.js","reducers/boardReducer.js","reducers/index.js","reducers/routerReducer.js","App.js","index.js"],"names":["changeRoute","route","type","boardMouseClick","tileX","tileY","x","y","connectRedux","mapStateToProps","arguments","length","undefined","actions","connect","_","merge","_ref","files","props","react_default","a","createElement","className","Button","onClick","bsSize","bsStyle","NewGame","createClass","getInitialState","name","changeName","this","setState","render","_this","value","state","onChange","e","target","levels","range","map","n","key","Layer","index","children","width","height","style","zIndex","MouseTile","tile","exists","MouseLayer","_ref2","tiles","i","TileBackground","fill","opacity","TileLayer","GameBoard_TileBackground","Unit","_ref3","unit","rects","color","push","textLength","image","UnitLayer","_ref4","units","GameBoard_Unit","EffectsLayer","_ref6","board","boardSelection","_ref5","GameBoard_TileLayer","GameBoard_UnitLayer","concat","playerUnits","cpuUnits","GameBoard_EffectsLayer","board_MouseLayer","Attack","attack","selectedUnit","maxLength","moves","getAttacks","Infobar_Attack","routes","/","MainMenu","/options","Options","/about","About","/new-game","/level-select","LevelSelect","/ingame","board_Infobar","board_GameBoard","CurrentRoute","console","warn","attacks","attack1","description","attack2","baseInfo","player_unit1","cpu_unit1","Object","classCallCheck","attrs","some","unitTile","isEqual","atk","allAttacks","amount","take","tile1","head","tile2","Math","abs","newTiles","reject","unshift","removeTiles","rows","cols","flatMap","j","find","DEFAULT_STATE","reducers","action","clickedTile","clickedUnit","canMoveTo","moveTo","objectSpread","store","createStore","combineReducers","App","es","components_CustomRouter","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4c5e4de5.chunk.js","sourcesContent":["export function changeRoute(route) {\n  return { type: 'CHANGE_ROUTE', route };\n}\n","export function boardMouseClick(tileX, tileY) {\n  return { type: 'BOARD_MOUSE_CLICK', x: tileX, y: tileY };\n}\n","import { connect } from 'react-redux';\nimport { changeRoute } from '../actions/router';\nimport { boardMouseClick } from '../actions/board';\nimport _ from 'lodash';\n\nexport function connectRedux(mapStateToProps = null, actions = {}) {\n  return connect(mapStateToProps, _.merge({}, actions, {changeRoute, boardMouseClick}));\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst MainMenu = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        The Game\n      </h1>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/new-game')} bsSize='lg' bsStyle='primary'>New Game</Button>\n      </div>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/options')} bsSize='lg' bsStyle='primary'>Options</Button>\n      </div>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/about')} bsSize='lg' bsStyle='primary'>About</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux(({files}) => ({files}))(MainMenu);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst Options = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        Options\n      </h1>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(Options);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\n\nconst About = (props) => {\n  return (\n    <div className='text-center'>\n      <div className=\"row top\" />\n      <h1>\n        About\n      </h1>\n      <h4>\n        I made it\n      </h4>\n      <div className=\"row\">\n        <Button onClick={() => props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Back</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(About);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport createClass from 'create-react-class';\n\nconst NewGame = createClass({\n  getInitialState() {\n    return {\n      name: '',\n    };\n  },\n\n  changeName(name) {\n    this.setState({name});\n  },\n\n  render() {\n    return (\n      <div className='text-center'>\n        <div className=\"row top\" />\n        <h1>\n          New Game\n        </h1>\n        <label>Name</label>\n        <input className=\"form-control\" value={this.state.name} onChange={e => this.changeName(e.target.value)} />\n        <div className=\"row\">\n          <Button onClick={() => this.props.changeRoute('/level-select')} bsSize='lg' bsStyle='primary'>Start Game</Button>\n        </div>\n        <div className=\"row\">\n          <Button onClick={() => this.props.changeRoute('/')} bsSize='lg' bsStyle='primary'>Cancel</Button>\n        </div>\n      </div>\n    );\n  },\n});\n\nexport default connectRedux(({files}) => ({files}))(NewGame);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connectRedux } from '../common/redux';\nimport _ from 'lodash';\n\nconst LevelSelect = (props) => {\n  const levels = _.range(1, 10);\n  return (\n    <div>\n      <div className=\"row top\" />\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h1>Choose Level</h1>\n          {levels.map(n => <div key={n} className=\"row\"><Button onClick={() => props.changeRoute('/ingame')}>Level {n}</Button></div>)}\n        </div>\n        <div className=\"col-md-6\">\n          <Button>Shop</Button>\n          <Button>Units</Button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default connectRedux()(LevelSelect);\n","import React from 'react';\n\nexport default ({index, children}) => {\n  return (\n    <svg width=\"690\" height=\"460\" style={{zIndex: index}}>\n      {children}\n    </svg>\n  );\n};\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nimport Layer from './Layer';\n\nconst MouseTile = connectRedux(() => ({}))(({tile, boardMouseClick}) => {\n  if(!tile.exists) {\n    return null;\n  }\n  return (\n    <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" className='mouse-tile' onClick={() => boardMouseClick(tile.x, tile.y)}/>\n  );\n});\n\nconst MouseLayer = ({tiles}) => {\n  return (\n    <Layer index={4}>\n      {tiles.map((tile, i) => <MouseTile key={i} tile={tile} />)}\n    </Layer>\n  );\n}\n\nexport default MouseLayer\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\nimport _ from 'lodash';\n\nimport MouseLayer from './MouseLayer';\nimport Layer from './Layer';\n\nconst TileBackground = ({tile}) => {\n    if(!tile.exists) {\n        return null;\n    }\n    return (\n        <rect x={tile.x * 46} y={tile.y * 46} width=\"40\" height=\"40\" style={{fill: 'white', opacity: 0.25}} />\n    );\n};\n\nconst TileLayer = ({tiles}) => {\n    return (\n        <Layer index={1}>\n            {tiles.map((tile, i) => <TileBackground key={i} tile={tile} />)}\n        </Layer>\n    );\n};\n\nconst Unit = ({unit}) => {\n    if(unit.tiles.length === 0) {\n        return null;\n    }\n    let rects = unit.tiles.map((tile, i) =>\n        <rect key={i} x={tile[0] * 46} y={tile[1] * 46} width=\"40\" height=\"40\" fill={unit.color} />\n    );\n    rects.push(<text key='pic' x={unit.tiles[0][0] * 46} y={unit.tiles[0][1] * 46 + 40} textLength=\"40\">{unit.image}</text>)\n    return rects;\n};\n\nconst UnitLayer = ({units}) => {\n    return (\n        <Layer index={2}>\n            {units.map((unit, i) => <Unit key={i} unit={unit} />)}\n        </Layer>\n    );\n};\n\nconst EffectsLayer = () => {\n    return <Layer index={3} />;\n};\n\nconst GameBoard = ({board}) => {\n    return (\n        <div>\n            <TileLayer tiles={board.tiles} />\n            <UnitLayer units={_.concat(board.playerUnits, board.cpuUnits)} />\n            <EffectsLayer />\n            <MouseLayer tiles={board.tiles} />\n        </div>\n    );\n};\n\nexport default connectRedux(({board, boardSelection})=>({board, boardSelection}))(GameBoard);\n","import React from 'react';\nimport { connectRedux } from '../../common/redux';\n\nconst Attack = ({attack}) => {\n    return (\n        <div className='attack'>\n            {attack.name}\n        </div>\n    );\n};\n\nconst Infobar = ({board}) => {\n    let unit = board.selectedUnit;\n    if(!unit) return null;\n    return (\n        <div>\n            <h3>{unit.name}</h3>\n            <div>Health: {unit.tiles.length}</div>\n            <div>Max Health: {unit.maxLength}</div>\n            <div>Move: {unit.moves}</div>\n            {unit.getAttacks().map((attack, index) => <Attack key={index} attack={attack} />)}\n        </div>\n    );\n};\n\nexport default connectRedux(({board})=>({board}))(Infobar);\n","import MainMenu from './MainMenu';\nimport Options from './Options';\nimport About from './About';\nimport NewGame from './NewGame';\nimport LevelSelect from './LevelSelect';\nimport Ingame from './Ingame';\n\nexport default {\n  '/': MainMenu,\n  '/options': Options,\n  '/about': About,\n  '/new-game': NewGame,\n  '/level-select': LevelSelect,\n  '/ingame': Ingame,\n};\n","import React from 'react';\nimport { connectRedux } from '../common/redux';\nimport GameBoard from './board/GameBoard';\nimport Infobar from './board/Infobar';\n\nconst Ingame = () => {\n    return (\n        <div>\n            <div className=\"row top\" />\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <ul className=\"list-group\">\n                        <Infobar />\n                    </ul>\n                </div>\n                <div className=\"col-md-9\">\n                    <GameBoard />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default connectRedux()(Ingame);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport routes from './routes'\n\nconst CustomRouter = (props) => {\n  let CurrentRoute = routes[props.route];\n\n  if(CurrentRoute) {\n    return <CurrentRoute />;\n  } else {\n    console.warn(`Route did not match - '${props.route}'`);\n    return <span />;\n  }\n};\n\nexport default connect(({route}) => ({route}))(CustomRouter);\n","\nconst attacks = {\n    attack1: {\n        name: 'attack_one',\n        type: 'standard',\n        description: 'does an attack super goodly'\n    },\n    attack2: {\n        name: 'cpu_attack',\n        type: 'standard',\n        description: 'does an attack super goodly'\n    },\n};\n\nexport default attacks;\n","import _ from 'lodash';\nimport allAttacks from './attacks';\n\nconst baseInfo = {\n    player_unit1: {\n        image: 'r',\n        tiles: [],\n        color: 'orange',\n        name: 'the_unit',\n        maxLength: 5,\n        moves: 4,\n        attacks: ['attack1', 'attack2'],\n    },\n    cpu_unit1: {\n        image: 'Z',\n        tiles: [],\n        color: 'lightblue',\n        name: 'the_bad_guy',\n        maxLength: 6,\n        moves: 8,\n        attacks: ['attack2'],\n    },\n};\n\nfunction tileDistance(tile1, tile2) {\n  return Math.abs(tile1[0] - tile2[0]) + Math.abs(tile1[1] - tile2[1]);\n};\n\nclass Unit {\n    constructor(type, tiles) {\n        let attrs = baseInfo[type];\n        if(!attrs) {\n            console.warn('cannot find unit type ' + type);\n        }\n        _.merge(this, attrs, {tiles});\n    }\n\n    isOn(tile) {\n        return _.some(this.tiles, unitTile => _.isEqual(unitTile, [tile.x, tile.y]));\n    }\n\n    getAttacks() {\n        return this.attacks.map(atk => allAttacks[atk]);\n    }\n\n    head() {\n        return this.tiles[0];\n    }\n\n    removeTiles(amount) {\n        if(amount <= 0) return;\n        this.tiles = _.take(this.tiles, this.tiles.length - amount);\n    }\n\n    canMoveTo(tile) {\n        return tileDistance(this.head(), tile) === 1;\n    }\n\n    moveTo(tile) {\n        let newTiles = _.reject(this.tiles, unitTile => _.isEqual(unitTile, tile));\n        newTiles.unshift(tile);\n        this.tiles = newTiles;\n        this.removeTiles(this.tiles.length - this.maxLength);\n    }\n}\n\nexport default Unit;\n","import _ from 'lodash';\nimport Unit from '../lib/Unit';\n\nconst rows = _.range(0, 15);\nconst cols = _.range(0, 10);\n\nlet tiles = _.flatMap(cols, i => rows.map(j => (\n    {\n        x: j,\n        y: i,\n        exists: true,\n    }\n)));\n\n_.find(tiles, tile => tile.x === 1 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 2 && tile.y === 5).exists = false;\n_.find(tiles, tile => tile.x === 4 && tile.y === 4).exists = false;\n_.find(tiles, tile => tile.x === 6 && tile.y === 4).exists = false;\n\n\nconst DEFAULT_STATE = {\n    selectedUnit: null,\n    tiles: tiles,\n    playerUnits: [\n        new Unit('player_unit1', [[1,2], [2,2], [2,3], [2,4]]),\n    ],\n    cpuUnits: [\n        new Unit('cpu_unit1', [[6,2], [7,2], [7,3], [7,4]]),\n    ],\n};\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n    if(action.type === 'BOARD_MOUSE_CLICK') {\n        let clickedTile = [action.x, action.y];\n        let clickedUnit = _.find(_.concat(state.playerUnits, state.cpuUnits), unit => _.isEqual(unit.tiles[0], clickedTile));\n        if(state.selectedUnit && !clickedUnit) {\n            if(state.selectedUnit.canMoveTo(clickedTile)) {\n                state.selectedUnit.moveTo(clickedTile);\n                return {...state};\n            }\n        }\n        return {...state, selectedUnit: clickedUnit};\n    }\n    return state;\n};\n","import { createStore, combineReducers } from 'redux';\nimport routerReducer from './routerReducer';\nimport boardReducer from './boardReducer';\n\nconst reducers = {\n  route: routerReducer,\n  board: boardReducer,\n};\n\nexport const store = createStore(combineReducers(reducers));\n","const DEFAULT_STATE = '/ingame';\n\nexport default (state = DEFAULT_STATE, action = {}) => {\n  if(action.type === 'CHANGE_ROUTE') {\n    return action.route;\n  } else {\n    return state;\n  }\n};\n","import React from 'react';\nimport createClass from 'create-react-class';\nimport CustomRouter from './components/CustomRouter';\nimport { store } from './reducers';\nimport { Provider } from 'react-redux';\n\nconst App = createClass({\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <CustomRouter />\n        </div>\n      </Provider>\n    );\n  }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './custom.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}